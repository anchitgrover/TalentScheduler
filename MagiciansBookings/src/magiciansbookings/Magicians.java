/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package magiciansbookings;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anchit Grover
 */
public class Magicians extends javax.swing.JFrame
{
    private final connection conn;
    private final Holiday holiday, holiday2;
    private final MagicianName mag,mag2,mag3;
    private final Entry entry,entry2,entry3,entry4;
    private final Bookings book, cancelBooking;
    private Table table;
    private final JTable checkTable; 
    private final String DATABASE_URL;
    private final String username;
    private final String password;
    private String freeMagician;
    private final ResultSet resultSet;
    private final Delete delete;
    private final Customer customer;   
    
    
    /**
     * Creates new form Magicians
     */
    public Magicians() 
    {        
        conn = new connection();
        entry = new Entry();
        entry2 = new Entry();
        entry3 = new Entry();
        entry4 = new Entry();
        holiday = new Holiday();
        holiday2 = new Holiday();
        mag = new MagicianName();
        mag2 = new MagicianName();
        mag3 = new MagicianName();
        book = new Bookings(); 
        cancelBooking = new Bookings();
        checkTable = new JTable();
        DATABASE_URL = "jdbc:derby://localhost:1527/MagiciansDB";
        username = "aqg5306";
        password = "1234";
        resultSet = null;
        delete = new Delete();
        customer = new Customer();

        
                
        initComponents();
        
//        entry.setHoliday(holidayComboBox.getSelectedItem().toString());  //initialize the holiday combo box for booking
//        entry2.setHoliday(checkByHoliday.getSelectedItem().toString());  //initialize the holiday combo box for checking status 
//        entry2.setMagicianName(checkByMagician.getSelectedItem().toString());  //intialize the magician name for checking status
//        delete.setHoliday(cancelHolidayDropBox.getSelectedItem().toString());
//        delete.setMagicianName(deleteMagicianDropBox.getSelectedItem().toString());
//        entry4.setCustomerName(customerDropBox.getSelectedItem().toString());
//        entry4.setHoliday(cancelHolidayDropBox.getSelectedItem().toString());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        holidayComboBox = new javax.swing.JComboBox();
        nameTextField = new javax.swing.JTextField();
        BookButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusTable = new javax.swing.JTable();
        magicianStatusButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        checkByMagician = new javax.swing.JComboBox();
        checkByHoliday = new javax.swing.JComboBox();
        holidayStatusButton = new javax.swing.JButton();
        waitListLablel = new javax.swing.JLabel();
        waitListButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        insertMagicianNameJField = new javax.swing.JTextField();
        addNewMagicianButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        insertHolidayNameJField = new javax.swing.JTextField();
        enterHoliday = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        deleteMagicianDropBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cancelHolidayDropBox = new javax.swing.JComboBox();
        deleteMagicianButton = new javax.swing.JButton();
        cancelBookButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        customerDropBox = new javax.swing.JComboBox();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Book Your Magician");

        jLabel5.setText("Holiday");

        jLabel6.setText("Name");

        Holiday holiday = new Holiday();
        ArrayList<String> names = new ArrayList<String>();
        names = holiday.getHoliday();
        holidayComboBox.setModel(new javax.swing.DefaultComboBoxModel( holiday.getHolidayName(names)));
        holidayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayComboBoxActionPerformed(evt);
            }
        });

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        BookButton.setText("Book");
        BookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(holidayComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(25, 25, 25)))
                        .addGap(159, 159, 159))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(BookButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(holidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(BookButton))
                .addContainerGap(311, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Booking", jPanel2);

        jLabel1.setText("Check Status");

        statusLabel.setText("Status By");

        statusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(statusTable);

        magicianStatusButton.setText("Status");
        magicianStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magicianStatusButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Magicians");

        jLabel8.setText("Holiday");

        MagicianName magicianStatus = new MagicianName();
        ArrayList<String> magStatus = new ArrayList<String>();
        magStatus = magicianStatus.getMagicianName();
        checkByMagician.setModel(new javax.swing.DefaultComboBoxModel(magicianStatus.getNameList(magStatus)));
        checkByMagician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkByMagicianActionPerformed(evt);
            }
        });

        Holiday holidayStatus = new Holiday();
        ArrayList<String> namesStatus = new ArrayList<String>();
        namesStatus = holidayStatus.getHoliday();
        checkByHoliday.setModel(new javax.swing.DefaultComboBoxModel(holidayStatus.getHolidayName(namesStatus)));
        checkByHoliday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkByHolidayActionPerformed(evt);
            }
        });

        holidayStatusButton.setText("Status");
        holidayStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayStatusButtonActionPerformed(evt);
            }
        });

        waitListLablel.setText("WaitList");

        waitListButton.setText("Status");
        waitListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitListButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(166, 166, 166))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(checkByMagician, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(magicianStatusButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(waitListButton)
                        .addGap(27, 27, 27))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkByHoliday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(78, 78, 78)
                        .addComponent(waitListLablel))
                    .addComponent(holidayStatusButton))
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(waitListLablel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkByHoliday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkByMagician, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianStatusButton)
                    .addComponent(holidayStatusButton)
                    .addComponent(waitListButton))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Status", jPanel3);

        jLabel3.setText("Insert name of new magician:");

        insertMagicianNameJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertMagicianNameJFieldActionPerformed(evt);
            }
        });

        addNewMagicianButton.setText("ENTER");
        addNewMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewMagicianButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Insert name of new holiday:");

        insertHolidayNameJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertHolidayNameJFieldActionPerformed(evt);
            }
        });

        enterHoliday.setText("ENTER");
        enterHoliday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterHolidayActionPerformed(evt);
            }
        });

        jLabel9.setText("Delete magician:");

        MagicianName deleteMagician = new MagicianName();
        ArrayList<String> deleteNamesMag = new ArrayList<String>();
        deleteNamesMag = deleteMagician.getMagicianName();
        deleteMagicianDropBox.setModel(new javax.swing.DefaultComboBoxModel(deleteMagician.getNameList(deleteNamesMag)));
        deleteMagicianDropBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMagicianDropBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Cancel Booking for customer:");

        Holiday deleteHoliday = new Holiday();
        ArrayList<String> deleteNames = new ArrayList<String>();
        deleteNames = deleteHoliday.getHoliday();
        cancelHolidayDropBox.setModel(new javax.swing.DefaultComboBoxModel(deleteHoliday.getHolidayName(deleteNames)));
        cancelHolidayDropBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelHolidayDropBoxActionPerformed(evt);
            }
        });

        deleteMagicianButton.setText("OK");
        deleteMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMagicianButtonActionPerformed(evt);
            }
        });

        cancelBookButton.setText("OK");
        cancelBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("  For holiday:");

        Customer customer = new Customer();
        ArrayList<String> customerNames = new ArrayList<String>();
        customerNames = customer.getCustomer();
        customerDropBox.setModel(new javax.swing.DefaultComboBoxModel(customer.getCustomerName(customerNames)));
        customerDropBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerDropBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteMagicianDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(insertMagicianNameJField)
                                    .addComponent(insertHolidayNameJField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addNewMagicianButton)
                                    .addComponent(enterHoliday)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(deleteMagicianButton))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelHolidayDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelBookButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(insertMagicianNameJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addNewMagicianButton))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(insertHolidayNameJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterHoliday))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(deleteMagicianDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteMagicianButton))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(customerDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cancelHolidayDropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(cancelBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add/Delete", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==BookButton)  //bookButton handler
        {
            ArrayList<String> customerName = new ArrayList<>();
            try
            {
                book.insertBookings(entry.getHoliday(),entry.getCustomerName()); //inserts holiday and customer name into the bookings table using the bookings class
                //customer.insertNewCustomer(entry.getCustomerName());
                customerName = customer.getCustomer();
                customerDropBox.setModel(new javax.swing.DefaultComboBoxModel(customer.getCustomerName(customerName)));
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(Magicians.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BookButtonActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
        
        if(evt.getSource()== nameTextField) //gets the name of the customer and sets it in the entry class
        {
            entry.setCustomerName(nameTextField.getText());
        }
        
        
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void holidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayComboBoxActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()== holidayComboBox) //gets the selected holiday from the drop down then sets the holiday in the entry class
        {
           holidayComboBox.getSelectedItem();
           entry.setHoliday(holidayComboBox.getSelectedItem().toString());
        }
    }//GEN-LAST:event_holidayComboBoxActionPerformed

    private void magicianStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magicianStatusButtonActionPerformed
        // TODO add your handling code here:
       DefaultTableModel myModel = (DefaultTableModel) statusTable.getModel();  //creates a table with columns of all the data
        myModel.setRowCount(0);
        statusTable.getColumnModel().getColumn(0).setHeaderValue("Customer");
        statusTable.getColumnModel().getColumn(1).setHeaderValue("Magician");
        statusTable.getColumnModel().getColumn(2).setHeaderValue("Holiday");
        statusTable.getColumnModel().getColumn(3).setHeaderValue("Date");
        statusTable.getTableHeader().resizeAndRepaint();
        PreparedStatement checkMagician;  //prepared statement used to get the magician, holiday and date from the bookings class for the table
        String selectQuery = "SELECT CUSTOMER, MAGICIAN, HOLIDAY, DATE FROM BOOKINGS WHERE MAGICIAN = ?";
        ResultSet resultSet;
        Connection connection = null;
        
        try 
            {
                connection = DriverManager.getConnection(DATABASE_URL,username,password); //to connect to the database
                checkMagician = connection.prepareStatement(selectQuery);  
                checkMagician.setString(1,entry2.getMagicianName());
                resultSet = checkMagician.executeQuery();
                int column = 4;
                while(resultSet.next())  //gets the values for the columns
                {
                    Object[] objects = new Object[column];
                    for(int i = 0; i<column; i++)
                    {
                        objects[i] = resultSet.getObject(i+1);
                    }
                    myModel.addRow(objects);
                }
                statusTable.setModel(myModel);
            } 
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }    
    }//GEN-LAST:event_magicianStatusButtonActionPerformed

    private void checkByMagicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkByMagicianActionPerformed
        // TODO add your handling code here:     
         if(evt.getSource()== checkByMagician) //sets which magician is selected from the drop down menu into the entry class
        {
            checkByMagician.getSelectedIndex();
            entry2.setMagicianName(checkByMagician.getSelectedItem().toString());
        }
    }//GEN-LAST:event_checkByMagicianActionPerformed

    private void checkByHolidayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkByHolidayActionPerformed
        // TODO add your handling code here:
        
        if(evt.getSource()== checkByHoliday) //sets which holiday is selected from the drop down meny into the entry class
        {
           checkByHoliday.getSelectedItem();
           entry2.setHoliday(checkByHoliday.getSelectedItem().toString());
        }
        
       
    }//GEN-LAST:event_checkByHolidayActionPerformed

    private void holidayStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayStatusButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel myModel = (DefaultTableModel) statusTable.getModel(); //creates a table to check based on the holiday status 
        myModel.setRowCount(0);
        statusTable.getColumnModel().getColumn(0).setHeaderValue("Customer");
        statusTable.getColumnModel().getColumn(1).setHeaderValue("Magician");
        statusTable.getColumnModel().getColumn(2).setHeaderValue("Holiday");
        statusTable.getColumnModel().getColumn(3).setHeaderValue("TimeStamp");
        statusTable.getTableHeader().resizeAndRepaint();
        PreparedStatement checkHoliday;  //prepared statement used to get the customer, magician, holiday from the bookings table based on the holiday
        String selectQuery = "SELECT CUSTOMER, MAGICIAN, HOLIDAY,DATE FROM BOOKINGS WHERE HOLIDAY = ?";
        ResultSet resultSet;
        Connection connection = null;
        
        try 
            {
                connection = DriverManager.getConnection(DATABASE_URL,username,password);
                checkHoliday = connection.prepareStatement(selectQuery);
                checkHoliday.setString(1,entry2.getHoliday());
                resultSet = checkHoliday.executeQuery();
                int column = 4;
                while(resultSet.next())
                {
                    Object[] objects = new Object[column];
                    for(int i = 0; i<column; i++)
                    {
                        objects[i] = resultSet.getObject(i+1);
                    }
                    myModel.addRow(objects);
                }
                statusTable.setModel(myModel);
            } 
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }    
        
    }//GEN-LAST:event_holidayStatusButtonActionPerformed

    private void waitListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitListButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==waitListButton) //to make a table based on the waiting list 
        {
            DefaultTableModel myModel = (DefaultTableModel) statusTable.getModel(); //creates a table to check based on the holiday status 
            myModel.setRowCount(0);
            statusTable.getColumnModel().getColumn(0).setHeaderValue("Customer");
            statusTable.getColumnModel().getColumn(1).setHeaderValue("Holiday");
            statusTable.getColumnModel().getColumn(2).setHeaderValue("TimeStamp");
            statusTable.getTableHeader().resizeAndRepaint();
            Statement statement = null; 
            String query = "SELECT * FROM WAITLIST";
            ResultSet resultSet;
            Connection connection = null;
           
            try
            {
                //String statement = "SELECT * FROM WAITLIST";
                //table = new Table(DATABASE_URL, username, password,statement);
                
                connection = DriverManager.getConnection(DATABASE_URL,username,password);
                statement = connection.createStatement();
                resultSet = statement.executeQuery(query);
                int column = 3;
                while(resultSet.next())
                {
                    Object[] objects = new Object[column];
                    for(int i = 0; i<column; i++)
                    {
                        objects[i] = resultSet.getObject(i+1);
                    }
                    myModel.addRow(objects);
                }
                statusTable.setModel(myModel);
            }
            catch(SQLException sqlException)
            {
                sqlException.printStackTrace();
            } 
            
            //statusTable.setModel(table);      
        }
        
    }//GEN-LAST:event_waitListButtonActionPerformed

    private void insertMagicianNameJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertMagicianNameJFieldActionPerformed
         if(evt.getSource()== insertMagicianNameJField) //gets the name of the customer and sets it in the entry class
        {
            entry3.setMagicianName(insertMagicianNameJField.getText());
        }
        
    }//GEN-LAST:event_insertMagicianNameJFieldActionPerformed

    private void insertHolidayNameJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertHolidayNameJFieldActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()== insertHolidayNameJField) //gets the name of the customer and sets it in the entry class
        {
            entry3.setHoliday(insertHolidayNameJField.getText());
        }
    }//GEN-LAST:event_insertHolidayNameJFieldActionPerformed

    private void enterHolidayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterHolidayActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()==enterHoliday)  //bookButton handler
        {
             ArrayList<String> holidayArray = new ArrayList<>();
             
            try
            {
                holiday.insertNewHoliday(entry3.getHoliday());
                holiday.getHoliday();
                holidayArray = holiday.getHoliday();
                holidayComboBox.setModel(new javax.swing.DefaultComboBoxModel( holiday.getHolidayName(holidayArray)));
                cancelHolidayDropBox.setModel(new javax.swing.DefaultComboBoxModel(holiday.getHolidayName(holidayArray)));
                checkByHoliday.setModel(new javax.swing.DefaultComboBoxModel(holiday.getHolidayName(holidayArray)));
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(Magicians.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_enterHolidayActionPerformed

    private void addNewMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewMagicianButtonActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()==addNewMagicianButton)  //bookButton handler
        {
            ArrayList<String> magicianArray = new ArrayList<>();
            try
            {
                mag2.insertNewMagician(entry3.getMagicianName());
                //mag2.getMagicianName();
                magicianArray = mag2.getMagicianName();
                mag2.moveFromWaitList();
                deleteMagicianDropBox.setModel(new javax.swing.DefaultComboBoxModel(mag2.getNameList(magicianArray)));  
                checkByMagician.setModel(new javax.swing.DefaultComboBoxModel(mag2.getNameList(magicianArray)));
                
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(Magicians.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_addNewMagicianButtonActionPerformed

    private void cancelHolidayDropBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelHolidayDropBoxActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()== cancelHolidayDropBox) //gets the selected holiday from the drop down then sets the holiday in the entry class
        {
           cancelHolidayDropBox.getSelectedItem();
           entry4.setHoliday(cancelHolidayDropBox.getSelectedItem().toString());
        }
        
    }//GEN-LAST:event_cancelHolidayDropBoxActionPerformed

    private void cancelBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookButtonActionPerformed
        // TODO add your handling code here:
         ArrayList<String> cus = new ArrayList<String>();
        if(evt.getSource()==cancelBookButton)  //bookButton handler
        {
           
            try 
            {
               cancelBooking.CancelCustomer(entry4.getCustomerName(), entry4.getHoliday());
               //cancelBooking.deleteCustomerFromWaitingList(entry4.getCustomerName());
               cancelBooking.removeCusWaitList(entry4.getCustomerName());
               customer.deleteCustomer(entry4.getCustomerName());
               cus = customer.getCustomer();
               customerDropBox.setModel(new javax.swing.DefaultComboBoxModel(customer.getCustomerName(cus)));
               cancelBooking.moveCustomerFromWaitingList2(entry4.getHoliday());                 
            }
            catch (SQLException ex)
            {
                Logger.getLogger(Magicians.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cancelBookButtonActionPerformed

    private void deleteMagicianDropBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMagicianDropBoxActionPerformed
        // TODO add your handling code here:
         if(evt.getSource()== deleteMagicianDropBox) //gets the selected holiday from the drop down then sets the holiday in the entry class
        {
           deleteMagicianDropBox.getSelectedItem();
           delete.setMagicianName(deleteMagicianDropBox.getSelectedItem().toString());
        }
    }//GEN-LAST:event_deleteMagicianDropBoxActionPerformed

    private void deleteMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMagicianButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> magician = new ArrayList<>();
        //ArrayList<String> hol = new ArrayList<>();       
        if(evt.getSource()==deleteMagicianButton)  //bookButton handler
        {            
//            mag3.getMagicianName();
            magician = mag3.getMagicianName();
            try
            {
                mag.removeMagician(delete.getMagicianName());
                mag.sendCustomerIntoWaitListAfterDelete(delete.getMagicianName());
                book.deleteMagicianFromBookings(delete.getMagicianName()); 
                magician = mag.getMagicianName();
                checkByMagician.setModel(new javax.swing.DefaultComboBoxModel(mag3.getNameList(magician)));
                deleteMagicianDropBox.setModel(new javax.swing.DefaultComboBoxModel(mag3.getNameList(magician)));
            } 
            catch (SQLException ex)
            {
                Logger.getLogger(Magicians.class.getName()).log(Level.SEVERE, null, ex);
            }
            deleteMagicianDropBox.setModel(new javax.swing.DefaultComboBoxModel(mag3.getNameList(magician)));
            
        }
    }//GEN-LAST:event_deleteMagicianButtonActionPerformed

    private void customerDropBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerDropBoxActionPerformed
        // TODO add your handling code here:
        if(evt.getSource()== customerDropBox) //gets the selected holiday from the drop down then sets the holiday in the entry class
        {
           customerDropBox.getSelectedItem();
           entry4.setCustomerName(customerDropBox.getSelectedItem().toString());
        }
        
    }//GEN-LAST:event_customerDropBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Magicians.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Magicians.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Magicians.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Magicians.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Magicians().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookButton;
    private javax.swing.JButton addNewMagicianButton;
    private javax.swing.JButton cancelBookButton;
    private javax.swing.JComboBox cancelHolidayDropBox;
    private javax.swing.JComboBox checkByHoliday;
    private javax.swing.JComboBox checkByMagician;
    private javax.swing.JComboBox customerDropBox;
    private javax.swing.JButton deleteMagicianButton;
    private javax.swing.JComboBox deleteMagicianDropBox;
    private javax.swing.JButton enterHoliday;
    private javax.swing.JComboBox holidayComboBox;
    private javax.swing.JButton holidayStatusButton;
    private javax.swing.JTextField insertHolidayNameJField;
    private javax.swing.JTextField insertMagicianNameJField;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton magicianStatusButton;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTable statusTable;
    private javax.swing.JButton waitListButton;
    private javax.swing.JLabel waitListLablel;
    // End of variables declaration//GEN-END:variables
}
